diff --git a/drivers/amlogic/display/vout/tvconf.c b/drivers/amlogic/display/vout/tvconf.c
index 6e2da14..5d11268 100755
--- a/drivers/amlogic/display/vout/tvconf.c
+++ b/drivers/amlogic/display/vout/tvconf.c
@@ -63,8 +63,8 @@ SET_TV_CLASS_ATTR(vdac_setting,parse_vdac_setting)
 #define DEFAULT_POLICY_FR_AUTO	1
 
 static int fr_auto_policy = DEFAULT_POLICY_FR_AUTO;
-int fps_playing_flag=0 ;//1:  23.976/29.97/59.94 fps stream is playing
-vmode_t fps_target_mode=VMODE_INIT_NULL;
+//int fps_playing_flag=0 ;//1:  23.976/29.97/59.94 fps stream is playing
+//vmode_t fps_target_mode=VMODE_INIT_NULL;
 static void policy_framerate_automation_store(char* para);
 
 SET_TV_CLASS_ATTR(policy_fr_auto, policy_framerate_automation_store)
@@ -979,7 +979,7 @@ static int get_target_vmode(int framerate_target)
 			break;
 	}
 */
-	fps_target_mode=mode_target;
+//	fps_target_mode=mode_target;
 	return mode_target;
 }
 
@@ -1138,6 +1138,7 @@ static int framerate_automation_process(int duration)
 	pvinfo = tv_get_current_info();
 	if( (pvinfo->sync_duration_num==fr_target) || (pvinfo->sync_duration_num==(fr_target/100)) )
 		return 0;
+/*
 	switch(fr_vsource){
 	case 5994:
 	case 2997:
@@ -1149,6 +1150,7 @@ static int framerate_automation_process(int duration)
 		break;
 	}
 	printk("%s[%d] fps_playing_flag = %d\n", __FUNCTION__,__LINE__, fps_playing_flag);
+*/
 	mode_target = get_target_vmode(fr_target);
 	
 	framerate_automation_set_mode(mode_target);
@@ -1181,7 +1183,7 @@ static int tv_set_vframe_rate_end_hint(void)
 	printk("vout [%s] return mode = %d, policy = %d!\n", __FUNCTION__, mode_by_user, fr_auto_policy);
 	if( fr_auto_policy != 0 )
 	{
-		fps_playing_flag=0;
+	//	fps_playing_flag=0;
 		framerate_automation_set_mode(mode_by_user);
 	}
 
diff --git a/drivers/amlogic/display/vout/vout_serve.c b/drivers/amlogic/display/vout/vout_serve.c
index 4ce12bd..26ec633 100755
--- a/drivers/amlogic/display/vout/vout_serve.c
+++ b/drivers/amlogic/display/vout/vout_serve.c
@@ -136,6 +136,7 @@ static int  meson_vout_resume(struct platform_device *pdev);
 
 #ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
 vmode_t mode_by_user = VMODE_INIT_NULL;
+/*
 extern int fps_playing_flag;
 extern vmode_t fps_target_mode;
 extern char* get_name_from_vmode(vmode_t mode);
@@ -209,6 +210,7 @@ static void fps_auto_adjust_mode( vmode_t *pmode)
 		}
 	}
 }
+*/
 
 void update_vmode_status(char* name)
 {
@@ -240,16 +242,21 @@ static  void  set_vout_mode(char * name)
 		amlog_mask_level(LOG_MASK_PARA,LOG_LEVEL_HIGH,"don't set the same mode as current.\n");
 		return ;
 	}
+/*
 #ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
 	//if plug hdmi during fps (stream is playing), then adjust mode to fps vmode
 	fps_auto_adjust_mode(&mode);
 	printk("%s[%d]fps_target_mode=%d\n",__func__,__LINE__,mode);
 	update_vmode_status(get_name_from_vmode(mode));
 #endif
+*/
 	set_current_vmode(mode);
+/*
 #ifdef CONFIG_AML_VOUT_FRAMERATE_AUTOMATION
 	amlog_mask_level(LOG_MASK_PARA,LOG_LEVEL_HIGH,"new mode =%s set ok\n",get_name_from_vmode(mode));
 #endif
+*/
+	amlog_mask_level(LOG_MASK_PARA,LOG_LEVEL_HIGH,"new mode %s set ok\n",name);
 	vout_notifier_call_chain(VOUT_EVENT_MODE_CHANGE,&mode) ;
 	printk("%s[%d]\n", __func__, __LINE__);
 }
